/*
 * Copyright (C) Mellanox Technologies, Ltd. 2010-2015 ALL RIGHTS RESERVED.
 *
 * This software product is a proprietary product of Mellanox Technologies, Ltd.
 * (the "Company") and all right, title, and interest in and to the software product,
 * including all associated intellectual property rights, are and shall
 * remain exclusively with the Company.
 *
 * This software product is governed by the End User License Agreement
 * provided with the software product.
 *
 */

#ifndef SX_VTCA_KERNEL_USER_H_
#define SX_VTCA_KERNEL_USER_H_

#ifdef __KERNEL__
#include <linux/uio.h>
#else
#include <sys/uio.h>
#include <stdint.h>
#endif

#define SX_NODE_DESCRIPTION_SIZE 64
#define SX_VTCA_GENL_VERSION 0x1
#define SX_VTCA_GENL_NAME "sx_vtca"

/* attributes */
enum {
	SX_VTCA_ATTR_UNSPEC,
	/* NODE_DESCRIPTION attributes */
	SX_VTCA_ATTR_NODE_DESC,
	/* NODE_INFO attributes */
	SX_VTCA_ATTR_NODE_INFO_FIELD_MASK,
	SX_VTCA_ATTR_NODE_INFO_NODE_GUID,
	SX_VTCA_ATTR_NODE_INFO_REV_ID,
	SX_VTCA_ATTR_NODE_INFO_VENDOR_ID,
	SX_VTCA_ATTR_NODE_INFO_VENDOR_PART_ID,
	SX_VTCA_ATTR_NODE_INFO_SYS_IMAGE_GUID,
	SX_VTCA_ATTR_NODE_INFO_NUM_PORTS,
	SX_VTCA_ATTR_NODE_INFO_PARTITION_CAP,
	/* PORT_INFO attributes */
	SX_VTCA_ATTR_PORT_INFO_FIELD_MASK,
	SX_VTCA_ATTR_PORT_INFO_PORT,
	SX_VTCA_ATTR_PORT_INFO_MAX_MTU,
	SX_VTCA_ATTR_PORT_INFO_VL_CAP,
	SX_VTCA_ATTR_PORT_INFO_GID_PREFIX,
	SX_VTCA_ATTR_PORT_INFO_STATE,
	SX_VTCA_ATTR_PORT_INFO_ACTIVE_MTU,
	SX_VTCA_ATTR_PORT_INFO_PORT_CAP_FLAGS,
	SX_VTCA_ATTR_PORT_INFO_BAD_PKEY_COUNTER,
	SX_VTCA_ATTR_PORT_INFO_QKEY_VIOL_COUNTER,
	SX_VTCA_ATTR_PORT_INFO_LID,
	SX_VTCA_ATTR_PORT_INFO_SM_LID,
	SX_VTCA_ATTR_PORT_INFO_LMC,
	SX_VTCA_ATTR_PORT_INFO_SM_SL,
	SX_VTCA_ATTR_PORT_INFO_SUBNET_TIMEOUT,
	SX_VTCA_ATTR_PORT_INFO_INIT_TYPE_REPLY,
	SX_VTCA_ATTR_PORT_INFO_ACTIVE_WIDTH,
	SX_VTCA_ATTR_PORT_INFO_ACTIVE_SPEED,
	SX_VTCA_ATTR_PORT_INFO_PHYS_STATE,
	/* GUID_INFO attributes */
	SX_VTCA_ATTR_GUID_INFO_PORT,
	SX_VTCA_ATTR_GUID_INFO_INDEX,
	SX_VTCA_ATTR_GUID_INFO_GID,
	/* PKEY_INFO attributes */
	SX_VTCA_ATTR_PKEY_TABLE_PORT,
	SX_VTCA_ATTR_PKEY_TABLE_INDEX,
	SX_VTCA_ATTR_PKEY_TABLE_PKEY,
	/* PORT_COUNTERS attributes */
	SX_VTCA_ATTR_PORT_COUNTERS_PORT,
	SX_VTCA_ATTR_PORT_COUNTERS_FIELD_MASK,
	SX_VTCA_ATTR_PORT_COUNTERS_LINK_DOWNED_COUNTER,
	SX_VTCA_ATTR_PORT_COUNTERS_PORT_XMIT_DISCARDS,
	SX_VTCA_ATTR_PORT_COUNTERS_VL15_DROPPED,
	/* GENERATE_EVENT attributes */
	SX_VTCA_ATTR_GENERATE_EVENT_PORT,
	SX_VTCA_ATTR_GENERATE_EVENT_EVENT_TYPE,
	__SX_VTCA_ATTR_MAX,
};
#define SX_VTCA_ATTR_MAX (__SX_VTCA_ATTR_MAX - 1)

/* commands */
enum {
	SX_VTCA_CMD_UNSPEC,
	SX_VTCA_CMD_SET_NODE_DESCRIPTION,
	SX_VTCA_CMD_GET_NODE_DESCRIPTION,
	SX_VTCA_CMD_SET_NODE_INFO,
	SX_VTCA_CMD_GET_NODE_INFO,
	SX_VTCA_CMD_SET_PORT_INFO,
	SX_VTCA_CMD_GET_PORT_INFO,
	SX_VTCA_CMD_SET_GUID_INFO,
	SX_VTCA_CMD_GET_GUID_INFO,
	SX_VTCA_CMD_SET_PKEY_TABLE,
	SX_VTCA_CMD_GET_PKEY_TABLE,
	SX_VTCA_CMD_RESET_PORT_COUNTERS,
	SX_VTCA_CMD_GET_PORT_COUNTERS,
	SX_VTCA_CMD_GET_PORT_SWID_MAP,
	SX_VTCA_CMD_GENERATE_EVENT,
	__SX_VTCA_CMD_MAX,
};
#define SX_VTCA_CMD_MAX (__SX_VTCA_CMD_MAX - 1)

enum {
	SX_VTCA_NODE_INFO_NODE_GUID_FLAG	= 1 << 0,
	SX_VTCA_NODE_INFO_REV_ID_FLAG		= 1 << 1,
	SX_VTCA_NODE_INFO_VENDOR_ID_FLAG	= 1 << 2,
	SX_VTCA_NODE_INFO_VENDOR_PART_ID_FLAG	= 1 << 3,
	SX_VTCA_NODE_INFO_SYS_IMAGE_GUID_FLAG	= 1 << 4,
	SX_VTCA_NODE_INFO_NUM_PORTS_FLAG	= 1 << 5,
	SX_VTCA_NODE_INFO_PARTITION_CAP_FLAG	= 1 << 6
};

enum {
	SX_VTCA_PORT_INFO_MAX_MTU_FLAG		= 1 << 0,
	SX_VTCA_PORT_INFO_VL_CAP_FLAG		= 1 << 1,
	SX_VTCA_PORT_INFO_GID_PREFIX_FLAG	= 1 << 2,
	SX_VTCA_PORT_INFO_STATE_FLAG		= 1 << 3,
	SX_VTCA_PORT_INFO_ACTIVE_MTU_FLAG	= 1 << 4,
	SX_VTCA_PORT_INFO_PORT_CAP_FLAGS_FLAG	= 1 << 5,
	SX_VTCA_PORT_INFO_BAD_PKEY_CNTR_FLAG	= 1 << 6,
	SX_VTCA_PORT_INFO_QKEY_VIOL_CNTR_FLAG	= 1 << 7,
	SX_VTCA_PORT_INFO_LID_FLAG		= 1 << 8,
	SX_VTCA_PORT_INFO_SM_LID_FLAG		= 1 << 9,
	SX_VTCA_PORT_INFO_LMC_FLAG		= 1 << 10,
	SX_VTCA_PORT_INFO_SM_SL_FLAG		= 1 << 11,
	SX_VTCA_PORT_INFO_SUBNET_TIMEOUT_FLAG	= 1 << 12,
	SX_VTCA_PORT_INFO_INIT_TIME_REPLY_FLAG	= 1 << 13,
	SX_VTCA_PORT_INFO_ACTIVE_WIDTH_FLAG	= 1 << 14,
	SX_VTCA_PORT_INFO_ACTIVE_SPEED_FLAG	= 1 << 15,
	SX_VTCA_PORT_INFO_PHYS_STATE_FLAG	= 1 << 16
};

enum {
	SX_VTCA_PORT_COUNTERS_LINK_DOWNED_COUNTER_FLAG	= 1 << 0,
	SX_VTCA_PORT_COUNTERS_PORT_XMIT_DISCARDS_FLAG	= 1 << 1,
	SX_VTCA_PORT_COUNTERS_VL15_DROPPED_FLAG		= 1 << 2,
};

typedef enum sx_vtca_event_type {
	SX_VTCA_EVENT_TYPE_PORT_UP,
	SX_VTCA_EVENT_TYPE_PORT_DOWN,
	SX_VTCA_EVENT_TYPE_LID_CHANGE,
	SX_VTCA_EVENT_TYPE_CLIENT_REREGISTER,
	SX_VTCA_EVENT_TYPE_PKEY_CHANGE,
	SX_VTCA_EVENT_TYPE_SM_CHANGE
} sx_vtca_event_type;

#endif /* SX_VTCA_KERNEL_USER_H_ */
